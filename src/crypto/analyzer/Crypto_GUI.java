/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crypto.analyzer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.text.DecimalFormat;

/**
 *
 * @author Nikhil
 */
public class Crypto_GUI extends javax.swing.JFrame {
    DecimalFormat cash = new DecimalFormat("$#,###,##0.00##### CAD");
    double USD_to_CAD;
    /**
     * Creates new form Crypto_GUI
     */
    public Crypto_GUI() {
        initComponents();
        int end,start;
        double price = 1.3;
        try{
            URL url = new URL("http://www.xe.com/currencyconverter/convert/?Amount=1&From=USD&To=CAD");
            URLConnection urlConn = url.openConnection();
            InputStreamReader inStream = new InputStreamReader(urlConn.getInputStream());
            BufferedReader buff = new BufferedReader(inStream);
            String line = buff.readLine();
            while(line!=null){
                if(line.contains("class='uccResultAmount")){
                    end = line.indexOf("</span><span class='uccToCurrencyCode'>") - 1;
                    start = line.indexOf("<span class='uccResultAmount'>") + "<span class='uccResultAmount'>".length();
                    price = Double.parseDouble(line.substring(start, end));
                    break;
                }
                line = buff.readLine();
            }
        }
        catch(IOException e){
            System.out.println("Error: " + e);
        }
        USD_to_CAD = price;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_group_cryptos = new javax.swing.ButtonGroup();
        lbl_title = new javax.swing.JLabel();
        lbl_Value = new javax.swing.JLabel();
        btn_update = new javax.swing.JButton();
        rdo_bitcoin = new javax.swing.JRadioButton();
        rdo_ethereum = new javax.swing.JRadioButton();
        rdo_ripple = new javax.swing.JRadioButton();
        rdo_dogecoin = new javax.swing.JRadioButton();
        rdo_litecoin = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_title.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        lbl_title.setText("Crypto~Analyzer");

        lbl_Value.setFont(new java.awt.Font("Source Sans Pro", 0, 24)); // NOI18N
        lbl_Value.setText("Welcome to Crypto~Analyzer");

        btn_update.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        btn_update.setText("UPDATE");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_group_cryptos.add(rdo_bitcoin);
        rdo_bitcoin.setSelected(true);
        rdo_bitcoin.setText("Bitcoin");

        btn_group_cryptos.add(rdo_ethereum);
        rdo_ethereum.setText("Ethereum");

        btn_group_cryptos.add(rdo_ripple);
        rdo_ripple.setText("Ripple");

        btn_group_cryptos.add(rdo_dogecoin);
        rdo_dogecoin.setText("Dogecoin");

        btn_group_cryptos.add(rdo_litecoin);
        rdo_litecoin.setText("Litecoin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(lbl_title))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdo_ethereum)
                            .addComponent(rdo_ripple)
                            .addComponent(rdo_bitcoin))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdo_dogecoin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdo_litecoin)
                                .addGap(102, 102, 102)
                                .addComponent(btn_update)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 139, Short.MAX_VALUE)
                .addComponent(lbl_Value, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbl_title)
                .addGap(44, 44, 44)
                .addComponent(lbl_Value)
                .addGap(178, 178, 178)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdo_bitcoin)
                    .addComponent(rdo_dogecoin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdo_ethereum)
                    .addComponent(btn_update)
                    .addComponent(rdo_litecoin))
                .addGap(18, 18, 18)
                .addComponent(rdo_ripple)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        String coin = "";
        if(rdo_bitcoin.isSelected()){
            coin = "bitcoin";
        }
        else if(rdo_dogecoin.isSelected()){
            coin = "dogecoin";
        }
        else if(rdo_ethereum.isSelected()){
            coin = "ethereum";
        }
        else if(rdo_litecoin.isSelected()){
            coin = "litecoin";
        }
        else if(rdo_ripple.isSelected()){
            coin = "ripple";
        }
        double price = 0;
        try{
            URL url = new URL("https://coinmarketcap.com/currencies/" + coin + "/");
            URLConnection urlConn = url.openConnection();
            InputStreamReader inStream = new InputStreamReader(urlConn.getInputStream());
            BufferedReader buff = new BufferedReader(inStream);
            String line = buff.readLine();
            int end,start;
            while(line != null){
                if(line.contains("data-currency-value>")){
                    end = line.indexOf("/") - 1;
                    start = line.indexOf(">") + 1;
                    price = Double.parseDouble(line.substring(start, end));
                    break;
                }
                line = buff.readLine();
            }
        }
        catch(IOException e){
            System.out.println("Error: " + e);
        }
        price = price * USD_to_CAD;
        lbl_Value.setText(coin + ": " + cash.format(price));
    }//GEN-LAST:event_btn_updateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crypto_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crypto_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crypto_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crypto_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crypto_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btn_group_cryptos;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel lbl_Value;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JRadioButton rdo_bitcoin;
    private javax.swing.JRadioButton rdo_dogecoin;
    private javax.swing.JRadioButton rdo_ethereum;
    private javax.swing.JRadioButton rdo_litecoin;
    private javax.swing.JRadioButton rdo_ripple;
    // End of variables declaration//GEN-END:variables
}
